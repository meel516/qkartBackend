version: '3.8'

services:
  # Infrastructure Services
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: services/auth/Dockerfile
    container_name: auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=file:./auth.db
      - JWT_SECRET=your-super-secret-jwt-key
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./data:/app/data
    restart: unless-stopped

  # Products Service
  products-service:
    build:
      context: .
      dockerfile: services/products/Dockerfile
    container_name: products-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=file:./products.db
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./data:/app/data
    restart: unless-stopped

  # Cart Service
  cart-service:
    build:
      context: .
      dockerfile: services/cart/Dockerfile
    container_name: cart-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DATABASE_URL=file:./cart.db
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672
      - PRODUCTS_SERVICE_URL=http://products-service:3002
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      products-service:
        condition: service_started
    volumes:
      - ./data:/app/data
    restart: unless-stopped

  # Notifications Service
  notifications-service:
    build:
      context: .
      dockerfile: services/notifications/Dockerfile
    container_name: notifications-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672
      - EMAIL_SERVICE_API_KEY=your-email-service-key
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
  rabbitmq_data:

networks:
  default:
    name: microservice-network